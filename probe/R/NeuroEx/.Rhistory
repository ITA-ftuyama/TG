mean(mediH$sums)
262/105
require("knitr")
opts_chunk$set(eval=FALSE)  #evaluate nothing
eat <- read.table("./eatEtc.Rdata.txt", header=T, na.strings="NA")   #read first log created by NEx
medi <- read.table("./theta.Rdata.txt", header=T, na.strings="NA")
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: active, then meditation
clean <- function(df) {
df$class <- NULL   #eliminate class variable and blink data, then non-complete cases
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]
df
}
eat <- clean(eat)
medi <- clean(medi)
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- df/sums
foo$Meditation <- df$Meditation/100.0
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)
}
normEat <- normal(eat)
normMedi <- normal(medi)
normHalf <- normal(half)
hist(normEat$df.Alpha1)
hist(eat$Alpha1)
boxplot(list(eat$Theta, medi$Theta), names=c("eatTheta", "mediTheta"))
boxplot(list(normEat$sums, normMedi$sums), names = c("eatSums", "mediSums"))
meanMedi <- apply(normMedi,2,mean)
meanEat <- apply(normEat,2,mean)
midRow <- nrow(normHalf)/2
eatH <- normHalf[0:midRow,]
mediH <- normHalf[(midRow+1):nrow(normHalf),]
apply(eatH, 2, mean)
apply(mediH, 2, mean)
eatAlpha <- eatH$df.Alpha1 + eatH$df.Alpha2
mediAlpha <- mediH$df.Alpha1 + mediH$df.Alpha2
eatBeta <- eatH$df.Beta1 + eatH$df.Beta2
mediBeta <- mediH$df.Beta1 + mediH$df.Beta2
eatRat <- eatAlpha/eatBeta
mediRat <- mediAlpha/mediBeta
mean(eatRat); mean(mediRat)
boxplot(list(eatRat, mediRat, eatAlpha, mediAlpha))
mean(eatH$sums);  mean(mediH$sums)   #meditation total power about 2.5 times less than eat total power.
apply(eatH, 2, mean)
meanEat <- apply(eatH, 2, mean)
meanMedi <- apply(mediH, 2, mean)
meanRatio <- meanEat/meanMedi
meanRatio
meanRatio <- meanMedi/meanEat
meanRatio
meanEat2 <- apply(eat, 2, mean)
meanMedi2 <- apply(medi, 2, mean)
meanRatio2 <- meanMedi2/meanEat2
meanRatio2
eat <- read.table("./eatEtc.Rdata.txt", header=T, na.strings="NA")   #read first log created by NEx
medi <- read.table("./theta.Rdata.txt", header=T, na.strings="NA")
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: active, then meditation
clean <- function(df) {
df$class <- NULL   #eliminate class variable and blink data, then non-complete cases
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]
df
}
eat <- clean(eat)
medi <- clean(medi)
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- df/sums
foo$Meditation <- df$Meditation/100.0
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)
}
normEat <- normal(eat)
normMedi <- normal(medi)
normHalf <- normal(half)
hist(normEat$df.Alpha1)
hist(eat$Alpha1)
boxplot(list(eat$Theta, medi$Theta), names=c("eatTheta", "mediTheta"))
boxplot(list(normEat$sums, normMedi$sums), names = c("eatSums", "mediSums"))
meanMedi <- apply(normMedi,2,mean)
meanEat <- apply(normEat,2,mean)
midRow <- nrow(normHalf)/2
eatH <- normHalf[0:midRow,]
mediH <- normHalf[(midRow+1):nrow(normHalf),]
meanEat <- apply(eatH, 2, mean)
meanMedi <- apply(mediH, 2, mean)
meanRatio <- meanMedi/meanEat  #ratio matches output of the EEG app.
medianEat <- apply(eatH, 2, median)
medianMedi <- apply(mediH, 2, median)
medianRatio <- medianMedi/medianEat
meanEat2 <- apply(eat, 2, mean)
meanMedi2 <- apply(medi, 2, mean)
meanRatio2 <- meanMedi2/meanEat2
medianRatio
eat$class <- factor(0)
medi$class <- factor(1)
all <- rbind(eat,medi)
all$time <- NULL
medianEat2 <- apply(eat, 2, median)
medianMedi2 <- apply(medi, 2, median)
medianRatio2 <- medianMedi2/medianEat2
medianEat2;medianMedi2
eat <- read.table("./eatEtc.Rdata.txt", header=T, na.strings="NA")   #read first log created by NEx
medi <- read.table("./theta.Rdata.txt", header=T, na.strings="NA")
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: active, then meditation
clean <- function(df) {
df$class <- NULL   #eliminate class variable and blink data, then non-complete cases
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]
df
}
eat <- clean(eat)
medi <- clean(medi)
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- df/sums
foo$Meditation <- df$Meditation/100.0
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)
}
normEat <- normal(eat)
normMedi <- normal(medi)
normHalf <- normal(half)
hist(normEat$df.Alpha1)
hist(eat$Alpha1)
boxplot(list(eat$Theta, medi$Theta), names=c("eatTheta", "mediTheta"))
boxplot(list(normEat$sums, normMedi$sums), names = c("eatSums", "mediSums"))
meanMedi <- apply(normMedi,2,mean)
meanEat <- apply(normEat,2,mean)
midRow <- nrow(normHalf)/2
eatH <- normHalf[0:midRow,]
mediH <- normHalf[(midRow+1):nrow(normHalf),]
meanEat <- apply(eatH, 2, mean)
meanMedi <- apply(mediH, 2, mean)
meanRatio <- meanMedi/meanEat  #ratio matches output of the EEG app.
medianEat <- apply(eatH, 2, median)
medianMedi <- apply(mediH, 2, median)
medianRatio <- medianMedi/medianEat
meanEat2 <- apply(eat, 2, mean)
meanMedi2 <- apply(medi, 2, mean)
meanRatio2 <- meanMedi2/meanEat2
medianEat2 <- apply(eat, 2, median)
medianMedi2 <- apply(medi, 2, median)
medianRatio2 <- medianMedi2/medianEat2
eat$class <- factor(0)
medi$class <- factor(1)
all <- rbind(eat,medi)
all$time <- NULL
medianRatio2
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: active, then meditation
clean <- function(df) {
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]
df
}
half <- clean(half)
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- df/sums
foo$Meditation <- df$Meditation/100.0
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)
}
normHalf <- normal(half)
normHalf$class <- "base"
normHalf$class[, seq(1055:nrow(normHalf))] = "med"
nrow(normHalf)
normHalf[2:3]
normHalf%class[1:2]
normHalf[seq(1055:nrow(normHalf))]$class <- "med"
normHalf[,seq(1055:nrow(normHalf))]$class <- "med"
normHalf[seq(1055:nrow(normHalf)),]$class <- "med"
tail(normHalf)
head(normHalf)
normHalf <- normal(half)
normHalf$class <- "base"
normHalf[seq(1055:nrow(normHalf)),]$class <- "med"
head(normHalf)
normHalf$class <- "base"
normHalf[1055:nrow(normHalf),]$class <- "med"
head(normHalf)
tail(normHalf)
normHalf$class <- as.factor(normHalf$class)
normHalf$funct <- (normHalf$df.Gamma1 + normHalf$df.Gamma2)/normHalf$df.Delta
normHalf[1,]
hist(normHalf$funct)
lastHalf <- 1055:nrow(normHalf
)
head(lastHalf)
base <- normHalf[1:1054,]
med <- normHalf[lastHalf,]
mean(base[base$funct>.8,])
normHalf$funct <- (normHalf$df.Gamma1 + normHalf$df.Gamma2)/normHalf$df.Delta
base <- normHalf[1:1054,]
med <- normHalf[lastHalf,]
mean(base[base$funct>.8,])
head(base)
head(base$funct>.8)
mean(base$funct>.8)
mean(base$funct>1.8)
mean(base$funct>=1.8)
mean(med$funct>=1.8)
boxplot(base$funct>=1.8)
boxplot(med>=1.8)
boxplot(med$funct >=1.8)
plot(med$funct >=1.8)
boxplot(med$funct >=1.8)
boxplot(base$funct)
boxplot(med$funct)
boxplot(med$funct)
?boxplot
boxplot(base$funct, outline=F)
boxplot(med$funct, outline=F)
library(ggplot2)
boxplot(class  ~ base$funct, outline=F, data = normHalf)
boxplot(class  ~ funct, outline=F, data = normHalf)
boxplot(funct  ~ class, outline=F, data = normHalf)
?boxplot
model <- glm(class ~ -funct, data=train, family=binomial)
inTrain <- createDataPartition(y=normHalf$class, p=0.75, list=FALSE)
library(caret)
inTrain <- createDataPartition(y=normHalf$class, p=0.75, list=FALSE)
train <- all[inTrain,]
test <- all[-inTrain,]
model <- glm(class ~ .-funct, data=normHalf, family=binomial)
normHalf$funct <- NULL
head(normHalf)
normHalf$sums <- NULL
normHalf$functs <- NULL
head(normHalf,2)
normHalf$sums <- NULL
normHalf$functs <- NULL
normHalf$df.Attention <- NULL
normHalf$df.Meditation <- NULL
head(normHalf,2)
inTrain <- createDataPartition(y=normHalf$class, p=0.75, list=FALSE)
train <- all[inTrain,]
test <- all[-inTrain,]
inTrain <- createDataPartition(y=normHalf$class, p=0.75, list=FALSE)
train <- normHalf[inTrain,]
test <- normHalf[-inTrain,]
model <- glm(class ~ ., data=normHalf, family=binomial)
?predict
logit <- predict(model, test)
head(test)
model <- train(class ~ ., method="rf")  #random forest, which is also the default method.
trainX <- normHalf[inTrain,]
testX <- normHalf[-inTrain,]
model <- train(class ~ ., method="rf", data=trainX)  #random forest, which is also the default method.
print(model)
predicts <- predict(model$finalModel, testX) # run against test data
confusionMatrix(predicts, testX$class)
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]
df
}
half <- clean(half)
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]
df
}
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- df/sums
foo$Meditation <- df$Meditation/100.0
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)
}
normHalf <- normal(half)
normHalf$class <- "base"
lastHalf <- 1055:nrow(normHalf)
normHalf[lastHalf,]$class <- "med"
normHalf$class <- as.factor(normHalf$class)
normHalf$funct <- (normHalf$df.Gamma1 + normHalf$df.Gamma2)/normHalf$df.Delta
base <- normHalf[1:1054,]
med <- normHalf[lastHalf,]
head(base, 2)
baseAvg <- apply(base[,1:10],2,mean)
head(baseAvg,2)
medAvg <- apply(med[,1:10],2,mean)
medAvg/baseAvg
head(normHalf, 2)   #show the first two rows of the normalized data
head(normHalf, 2)   #show the first two rows of the normalized data
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {  #eliminate useless columns
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]  #retain only those rows that have NO NA's in them
df
}
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- df/sums        #normalization of the power data (and Meditation/Attention, incorrectly)
foo$Meditation <- df$Meditation/100.0   #do the Meditation normalization correctly.
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)   # return a new dataframe that includes the totPwr
}
normHalf <- normal(half)
head(normHalf, 2)   #show the first two rows of the normalized data
normHalf$class <- "base"
lastHalf <- 1055:nrow(normHalf)
normHalf[lastHalf,]$class <- "med"
normHalf$class <- as.factor(normHalf$class)
head(normHalf,1)
hist(normHalf$df.Delta)
hist(normHalf$df.Alpha1)
hist(log(normHalf$df.Delta))
hist(normHalf$df.Alpha1)
foo <- normHalf$df.Delta*normHalf$sums
hist(foo)
hist(normHalf$df.Beta1)
plot(normHalf$df.Beta)
plot(normHalf$df.Beta)
hist(normHalf$df.Beta1)
hist(normHalf$df.Gamma1)
hist(log(normHalf$df.Gamma1))
hist(log(normHalf$df.Gamma2))
hist(log(normHalf$df.Alpha1))
?log
hist(sqrt(normHalf$df.Gamma1))
hist(sqrt(normHalf$df.Alpha1))
require("knitr")
#opts_chunk$set(eval=FALSE)  #evaluate nothing
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {  #eliminate useless columns
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]  #retain only those rows that have NO NA's in them
df
}
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- df/sums        #normalization of the power data (and Meditation/Attention, incorrectly)
foo$Meditation <- df$Meditation/100.0   #do the Meditation normalization correctly.
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)   # return a new dataframe that includes the totPwr
}
normHalf <- normal(half)
head(normHalf, 2)   #show the first two rows of the normalized data
hist(normHalf$df.Meditation)
hist(normHalf$df.Attention)
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {  #eliminate useless columns
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]  #retain only those rows that have NO NA's in them
df
}
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- sqrt(df/sums)  #normalization of the power data (and Meditation/Attention, incorrectly)
foo$Meditation <- df$Meditation/100.0   #do the Meditation normalization correctly.
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)   # return a new dataframe that includes the totPwr
}
normHalf <- normal(half)
head(normHalf, 2)   #show the first two rows of the normalized data
hist(normHalf$df.Delta)
hist(normHalf$df.Alpha1)
sd(normHalf$df.Alpha1)
mean(normHalf$df.Alpha1)
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
half <- clean(half)
head(half,2)
mean(half$Delta)
mean(half$Alpha1)
hist(half$Delta)
hist(sqrt(half$Delta))
hist(normHalf$df.Delta)
foo <- normalHalf$df.Delta * normalHalf$df.sums
foo <- normHalf$df.Delta * normHalf$sums
hist(foo)
foo <- sqrt(foo)
hist(sqrt(foo))
hist(normHalf$df.Delta)
qqnorm(normHalf$df.Delta)
qqnorm(normHalf$df.Alpha1)
qqnorm(normHalf$df.Alpha2)
qqnorm(normHalf$df.Beta1)
qqnorm(normHalf$df.Beta2)
qqnorm(normHalf$df.Gamma1)
qqnorm(normHalf$df.Gamma2)
qqnorm(normHalf$df.Theta)
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {  #eliminate useless columns
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]  #retain only those rows that have NO NA's in them
df
}
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- sqrt(df/sums)  #normalization of the power data (and Meditation/Attention, incorrectly)
foo$Meditation <- df$Meditation/100.0   #do the Meditation normalization correctly.
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)   # return a new dataframe that includes the totPwr
}
normHalf <- normal(half)
head(normHalf, 2)   #show the first two rows of the normalized data
qnorm(normHalf$df.Gamma1)
qqnorm(normHalf$df.Gamma1)
normHalf$funct <- (normHalf$df.Gamma1 + normHalf$df.Gamma2)/normHalf$df.Delta
base <- normHalf[1:1054,]
med <- normHalf[lastHalf,]
normHalf$class <- "base"
lastHalf <- 1055:nrow(normHalf)
normHalf[lastHalf,]$class <- "med"
normHalf$class <- as.factor(normHalf$class)
normHalf$funct <- (normHalf$df.Gamma1 + normHalf$df.Gamma2)/normHalf$df.Delta
base <- normHalf[1:1054,]
med <- normHalf[lastHalf,]
head(base, 2) # just show the first two rows of the data frame for the base data
baseAvg <- apply(base[,1:10],2,mean)  #get the averages of the first 10 cols of base
medAvg <- apply(med[,1:10],2,mean)   #... and of meditation
medAvg/baseAvg                  # get the ratios, just as in NEx Summary graph page
mean(base$funct>=1.8)           # get the % passed of the baseline data
mean(med$funct>=1.8)            # get the % passed of the meditation data
boxplot(funct  ~ class, outline=F, data = normHalf)  #get the boxblot like that on performance page
normHalf$sums <- NULL
normHalf$functs <- NULL
normHalf$df.Attention <- NULL
normHalf$df.Meditation <- NULL
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {  #eliminate useless columns
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]  #retain only those rows that have NO NA's in them
df
}
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- sqrt(df/sums)  #normalization of the power data (and Meditation/Attention, incorrectly)
foo$Meditation <- df$Meditation/100.0   #do the Meditation normalization correctly.
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)   # return a new dataframe that includes the totPwr
}
normHalf <- normal(half)
qqnorm(normHalf$df.Attention)
qqnorm(normHalf$df.Meditation)
qqnorm(normHalf$df.blink)
head(normHalf,1)
half <- read.table("./half.Rdata.txt", header=T, na.strings="NA")  #first half: baseline, then meditation
clean <- function(df) {  #eliminate useless columns
df$class <- NULL
df$Blink <- NULL
df$time <- NULL
df <- df[complete.cases(df),]  #retain only those rows that have NO NA's in them
df
}
half <- clean(half)
totPower <- function(df) { df$Delta+df$Theta+df$Alpha1+df$Alpha2+df$Beta1+df$Beta2+df$Gamma1+df$Gamma2}
normal <- function(df) {
foo <- df
sums <- totPower(df)
foo <- sqrt(df/sums)  #normalization of the power data (and Meditation/Attention, incorrectly)
foo$Meditation <- df$Meditation/100.0   #do the Meditation normalization correctly.
foo$Attention <- df$Attention/100.0
data.frame(df=foo, sums=sums)   # return a new dataframe that includes the totPwr
}
normHalf <- normal(half)
head(normHalf, 2)
hist(normHalf$df.Delta)
